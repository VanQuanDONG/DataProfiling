

GO
ALTER PROCEDURE Data_Profiling_v2
AS
BEGIN 

    SET NOCOUNT ON;

    DECLARE @Filter VARCHAR(100);
    DECLARE @catalog VARCHAR(100);
    DECLARE @schema VARCHAR(100);
    DECLARE @table_name VARCHAR(100);
    DECLARE @column_name VARCHAR(100);
    DECLARE @Profiling_Date DATETIME2;
    DECLARE @TYPE VARCHAR(100);
    DECLARE @METADATA VARCHAR(100);
    DECLARE @sql NVARCHAR(MAX);

    DECLARE cursor_name CURSOR FOR  
    SELECT REF.TABLE_CATALOG,REF.TABLE_SCHEMA,REF.TABLE_NAME, REF.COLUMN_NAME, REF.Profiling_Filter, SYST.DATA_TYPE, CONCAT(SYST.DATA_TYPE, '-', SYST.CHARACTER_MAXIMUM_LENGTH) as METADATA      
    FROM Behaviour.dbo.Reftab REF LEFT JOIN INFORMATION_SCHEMA.COLUMNS SYST ON REF.TABLE_CATALOG = SYST.TABLE_CATALOG AND REF.TABLE_SCHEMA = SYST.TABLE_SCHEMA AND REF.TABLE_NAME = SYST.TABLE_NAME
    AND REF.COLUMN_NAME = SYST.COLUMN_NAME
    WHERE Profiling_Flag = 'Y';

    OPEN cursor_name;

    FETCH NEXT FROM cursor_name INTO @catalog , @schema, @table_name, @column_name, @filter, @TYPE, @METADATA;

    WHILE @@FETCH_STATUS = 0
    BEGIN
        IF (@filter <> '')
        BEGIN
            SET @sql = N'INSERT INTO Profiling_Result (TABLE_CATALOG,TABLE_SCHEMA,Table_Name, Column_Name,Metadata, Count_All, Count_Null, PCT_Null, TOTAL_COUNT_MINUS_ONE,Percent_of_minus_1,MIN_VALUE,MAX_VALUE, Profiling_Date, Profiling_Request_Filter) 
                        SELECT ''' + @catalog + ''' as TABLE_CATALOG,
                                '''  + @schema +''' as TABLE_SCHEMA,
                                ''' + @table_name +''' as Table_Name,
                               ''' + @column_name + ''' as Column_Name,
                                '''+@METADATA+''' as Metadata,
                                COUNT(*) as Count_All,
                                count(case when '+@column_name+' is null then cast(1 as int) end) as Count_Null,
                                CAST(SUM(CASE WHEN '+@column_name+' IS NULL THEN 1 ELSE 0 END) AS FLOAT) / COUNT(*) * 10 as PCT_Null,
                                SUM(case when CAST('+@column_name+' AS VARCHAR(100)) = ''-1'' then cast(1 as int) end) as TOTAL_COUNT_MINUS_ONE,
                                CAST(SUM(CASE WHEN CAST('+@column_name+' as VARCHAR(100))  = ''-1'' THEN 1 ELSE 0 END) as FLOAT) / COUNT(*) * 100  as  Percent_Minus_One,
                                MIN('+@column_name+') as min_value,
                                MAX('+@column_name+')  as max_value,
                                GETDATE() as Profiling_Date,
                                '+''''+ REPLACE(@Filter,'''','''''') + '''' + ' as Profiling_Request_Filter
                        FROM ' + @table_name + '
                        WHERE ' + @filter + ';';
            PRINT(@sql)
            EXEC (@sql); 
        END
        ELSE
        BEGIN
            SET @sql = N'INSERT INTO Profiling_Result (TABLE_CATALOG,TABLE_SCHEMA,Table_Name, Column_Name,Metadata, Count_All, Count_Null, PCT_Null, TOTAL_COUNT_MINUS_ONE,Percent_of_minus_1,MIN_VALUE,MAX_VALUE, Profiling_Date) 
                        SELECT  ''' + @catalog + ''' as TABLE_CATALOG,
                                '''  + @schema +''' as TABLE_SCHEMA,
                                ''' + @table_name +''' as Table_Name,
                               ''' + @column_name + ''' as Column_Name,
                                '''+@METADATA+''' as Metadata,
                                COUNT(*) as Count_All,
                                count(case when '+@column_name+' is null then cast(1 as int) end) as Count_Null,
                                CAST(SUM(CASE WHEN '+@column_name+' IS NULL THEN 1 ELSE 0 END) AS FLOAT) / COUNT(*) * 10 as PCT_Null,
                                SUM(case when CAST('+@column_name+' As VARCHAR(100)) = ''-1'' then cast(1 as int) end) as TOTAL_COUNT_MINUS_ONE,
                                CAST(SUM(CASE WHEN CAST('+@column_name+' AS VARCHAR(100))  = ''-1'' THEN 1 ELSE 0 END) as FLOAT) / COUNT(*) * 100  as  Percent_Minus_One,
                                MIN('+@column_name+') as min_value,
                                MAX('+@column_name+')  as max_value,
                                GETDATE() as Profiling_Date
                        FROM ' + @table_name + ';';
            PRINT(@sql)
            EXEC (@sql); 
        END;

        FETCH NEXT FROM cursor_name INTO @catalog, @schema, @table_name, @column_name, @filter,@TYPE, @METADATA;
    END;

    CLOSE cursor_name;
    DEALLOCATE cursor_name;

END;



EXEC Data_Profiling_v2

